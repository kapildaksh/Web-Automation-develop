/*
 * Testing Service API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: devops@prenetics.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.prenetics.swagger.testing.invoker;

import com.prenetics.swagger.testing.handler.*;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import io.restassured.RestAssured;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.builder.ResponseSpecBuilder;
import io.restassured.response.Response;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Supplier;

public class ApiClient {

    private final Config config;

    private ApiClient(Config config) {
        this.config = config;
    }

    public static ApiClient api(Config config) {
        return new ApiClient(config);
    }

    public ChallengeApi challenge() {
        return ChallengeApi.challenge(config.baseReqSpec.get());
    }
    public ConsultationApi consultation() {
        return ConsultationApi.consultation(config.baseReqSpec.get());
    }
    public CustomerApi customer() {
        return CustomerApi.customer(config.baseReqSpec.get());
    }
    public FoodApi food() {
        return FoodApi.food(config.baseReqSpec.get());
    }
    public LabApi lab() {
        return LabApi.lab(config.baseReqSpec.get());
    }
    public SleepsApi sleeps() {
        return SleepsApi.sleeps(config.baseReqSpec.get());
    }
    public StepsApi steps() {
        return StepsApi.steps(config.baseReqSpec.get());
    }
    public WeightsApi weights() {
        return WeightsApi.weights(config.baseReqSpec.get());
    }
    public WorkflowApi workflow() {
        return WorkflowApi.workflow(config.baseReqSpec.get());
    }

    public static class Config {
        private Supplier<RequestSpecBuilder> baseReqSpec;

        /**
         * Use common specification for all operations
         */
        public Config reqSpecSupplier(Supplier<RequestSpecBuilder> supplier) {
            this.baseReqSpec = supplier;
            return this;
        }

        public static Config apiConfig() {
            return new Config();
        }
    }
}